
/*jshint esversion: 6 */
const https = require('https');
const express = require("express");
const bodyParser = require("body-parser");
const url = require("url");
const fs = require("fs");
const sentiment = require('sentiment');
const databox = require('node-databox');

//My https certs generated by the container manager
const credentials = databox.getHttpsCredentials();

//The endpoint for my datastore (Where i can publish my sentiment data)
const DATABOX_ZMQ_ENDPOINT = process.env.DATABOX_ZMQ_ENDPOINT

//connect to my store to write data
sentimentStore = databox.NewTimeSeriesClient(DATABOX_ZMQ_ENDPOINT, false);

//The endpoint for the data sources requested in the manifest ( env var name derived from the id in the manifest)
let twitterUserTimeLine = {};
databox.HypercatToSourceDataMetadata(process.env.DATASOURCE_DS_twitterUserTimeLine)
.then((data)=>{
	twitterUserTimeLine = data
});

let testActuator = {};
databox.HypercatToSourceDataMetadata(process.env.DATASOURCE_DS_testActuator)
.then((data)=>{
    testActuator = data
    console.log(testActuator);
});

let twitterHashTagStream = {};
let twitterStore = null;
databox.HypercatToSourceDataMetadata(process.env.DATASOURCE_DS_twitterHashTagStream)
.then((data)=>{
    twitterHashTagStream = data

    //connect to the store I'm reading data from
    twitterStore = databox.NewTimeSeriesClient(twitterHashTagStream.DataSourceURL, false)
});




var app = express();

var status = "init";
app.get("/status", function(req, res) {
    res.send(status);
});

var latestTweet = {tweet:"No tweets received yet ...."};
app.get("/ui", function(req, res) {
    res.send("<html><script>setTimeout(function(){window.location.reload();},2000);</script><body><h2><pre>" + JSON.stringify(latestTweet, null, 4) + "</pre></h2></body></html>");
});

app.get("/ui/acctest", function(req, res) {
    console.log("GOT REQUEST to /ui/acctest");
    twitterStore.Write(testActuator.DataSourceMetadata.DataSourceID,{'test':'ing 123'})
    .then((body)=>{
        res.send("<h2>OK > " + body + "</h2>");
    })
    .catch((error)=>{
        res.send("<h2>ERROR::" + error + "</h2>");
    });
});

//start the express server
https.createServer(credentials, app).listen(8080);

Promise.resolve()
  .then(() =>{
    return new Promise((resolve,reject)=>{
      //let everyone know that I'm ready
      status = "active";

      //Register my sentiment datasource with my store to make it available to other apps
      console.log("Registering sentiment datasource");

        sentimentStore.RegisterDatasource({
            Description: 'Twitter user timeline sentiment',
            ContentType: 'text/json',
            Vendor: 'Databox Inc.',
            DataSourceType: 'twitterUserTimelineSentiment',
            DataSourceID: 'twitterUserTimelineSentiment',
            StoreType: 'ts',
        })
        .then(()=>{
            return sentimentStore.RegisterDatasource({
                Description: 'Twitter hash tag sentiment',
                ContentType: 'text/json',
                Vendor: 'Databox Inc.',
                DataSourceType: 'twitterHashTagSentiment',
                DataSourceID: 'twitterHashTagSentiment',
                StoreType: 'store-json',
            })
        })
        .then(resolve());
    });
  })
  .then(()=>{

    //register for live streaming data from the driver-twitter
    console.log("subscribing to data sources");

        twitterStore.Observe(twitterUserTimeLine.DataSourceMetadata.DataSourceID)
        .then((emitter)=>{

            emitter.on('data',(data)=>{
                let tweet = JSON.parse(data);
                console.log("LLA tweet data In app-twitter-sentiment main.js : " + tweet);
                latestTweet = { tweet:tweet.text, sentiment:sentiment(tweet.text) };
                sentimentData = { location: tweet.user.location, sentiment: sentiment(tweet.text) };
                databox.export.longpoll('http://52.246.188.12:8080/', sentimentData)
                .catch((err)=>{
                    console.log("ERROR databox.export.longpoll " + err);
                });
                sentimentStore.Write('twitterUserTimelineSentiment',sentimentData)
                .catch((err)=>{
                    console.warn(err);
                });
            });
            emitter.on('error',(err)=>{
                console.warn(err);
            });
        })
        .catch((err)=>{
            console.warn("Error Observing ",twitterUserTimeLine.DataSourceMetadata.DataSourceID," ",err);
        });

        twitterStore.Observe(twitterHashTagStream.DataSourceMetadata.DataSourceID)
        .then((emitter)=>{

            emitter.on('data',(data)=>{
                let tweet = JSON.parse(data);
                latestTweet = { tweet:tweet.text, sentiment:sentiment(tweet.text) };
                sentimentData = { location: tweet.user.location, sentiment: sentiment(tweet.text) };
                databox.export.longpoll('http://52.246.188.12:8080/', sentimentData)
                .catch((err)=>{
                    console.log("ERROR databox.export.longpoll " + err);
                });
                sentimentStore.Write('twitterHashTagSentiment',sentimentData)
                .catch((err)=>{
                    console.warn(err);
                });

            });
            emitter.on('error',(err)=>{
                console.warn(err);
            });
        }).catch((err)=>{
            console.warn("Error Observing ",twitterHashTagStream.DataSourceMetadata.DataSourceID," ",err);
        });

  })
  .catch((error)=>{
      status="error";
      console.log("[ERROR]",error);
  });

module.exports = app;
